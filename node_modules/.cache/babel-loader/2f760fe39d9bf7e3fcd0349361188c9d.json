{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport { GoogleBooksActions } from '../actions/googleBooks';\nimport { VolumeList } from '../models/Volume';\nimport { VolumeApi } from '../apiClient/googleBooks';\n\nfunction* getVolumes(action) {\n  yield put(GoogleBooksActions.setIsSearching(true));\n  const searchString = action.payload;\n  const params = {\n    q: searchString\n  };\n  const response = yield VolumeApi.get(params);\n\n  if (response.isSuccess) {\n    yield put(GoogleBooksActions.setVolumes(VolumeList.fromResponse(response.data)));\n  }\n\n  yield put(GoogleBooksActions.setIsSearching(false));\n}\n\nexport function* GoogleBooksSaga() {\n  yield takeLatest(GoogleBooksActions.getVolumes, getVolumes);\n}","map":{"version":3,"sources":["/Users/ohs80340/ReactApp/reactapp/src/sagas/googleBooks.ts"],"names":["put","takeLatest","GoogleBooksActions","VolumeList","VolumeApi","getVolumes","action","setIsSearching","searchString","payload","params","q","response","get","isSuccess","setVolumes","fromResponse","data","GoogleBooksSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AAEA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,UAAUC,UAAV,CAAqBC,MAArB,EAA+E;AAC7E,QAAMN,GAAG,CAACE,kBAAkB,CAACK,cAAnB,CAAkC,IAAlC,CAAD,CAAT;AACA,QAAMC,YAAY,GAAGF,MAAM,CAACG,OAA5B;AACA,QAAMC,MAAM,GAAG;AAAEC,IAAAA,CAAC,EAAEH;AAAL,GAAf;AACA,QAAMI,QAAQ,GAAG,MAAMR,SAAS,CAACS,GAAV,CAAcH,MAAd,CAAvB;;AACA,MAAIE,QAAQ,CAACE,SAAb,EAAwB;AACtB,UAAMd,GAAG,CAACE,kBAAkB,CAACa,UAAnB,CAA8BZ,UAAU,CAACa,YAAX,CAAwBJ,QAAQ,CAACK,IAAjC,CAA9B,CAAD,CAAT;AACD;;AACD,QAAMjB,GAAG,CAACE,kBAAkB,CAACK,cAAnB,CAAkC,KAAlC,CAAD,CAAT;AACD;;AAED,OAAO,UAAUW,eAAV,GAA4B;AACjC,QAAMjB,UAAU,CAACC,kBAAkB,CAACG,UAApB,EAAgCA,UAAhC,CAAhB;AACD","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\n\nimport { GoogleBooksActions } from '../actions/googleBooks';\nimport { VolumeList } from '../models/Volume';\nimport { VolumeApi } from '../apiClient/googleBooks';\n\nfunction* getVolumes(action: ReturnType<typeof GoogleBooksActions.getVolumes>) {\n  yield put(GoogleBooksActions.setIsSearching(true));\n  const searchString = action.payload;\n  const params = { q: searchString };\n  const response = yield VolumeApi.get(params);\n  if (response.isSuccess) {\n    yield put(GoogleBooksActions.setVolumes(VolumeList.fromResponse(response.data)));\n  }\n  yield put(GoogleBooksActions.setIsSearching(false));\n}\n\nexport function* GoogleBooksSaga() {\n  yield takeLatest(GoogleBooksActions.getVolumes, getVolumes);\n}\n"]},"metadata":{},"sourceType":"module"}